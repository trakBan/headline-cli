#!/usr/bin/env python3

# TODO: update README.md for -n arg

try:
   from bs4 import BeautifulSoup
   import requests, sys
   from termcolor import colored
   
except:
   print("One or more library is missing!")

try:
    args = sys.argv[1]

    if args == "-n":
      
      # The reason for this is that if 2 arguments are passed it will throw an error. Thats the reason for having try inside the try.
      try:
          number = sys.argv[2]
          article_limit = number

      # If no number is provided with the -n it will go with the default
      except:
          print("No number is passed, going with the default.")
          article_limit = 5

      # Outputs help
    if args == "-h" or args == "--help":
       print("""
       -n   used for article limit - example of use is -n [number]
       """)
       article_limit = 5

except:
   article_limit = 5 # This is the default limit without passing in any arguments. You can change that variable to your liking
   print(f"Using default article limit: {article_limit}")

print(colored("Welcome to CLI news headline tool!", "green"))
print("Some news might be", colored("biased", "red"), "because it is using bing search engine to fetch the news \n")
print("Current article fetch limit is:", colored(article_limit, "cyan"))

article_limit = int(article_limit)

counter = 0
while True:
   counter = 0
   fetch = input("What news do you want to recive?: ")

   raw = requests.get("https://www.bing.com/news/search?q=" + fetch).text
   soup = BeautifulSoup(raw, "html.parser")

   for data in soup.find_all("div", class_ = "news-card newsitem cardcommon b_cards2", limit = article_limit):
      counter += 1

      print("\n=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=", colored(counter, "green"), "\n")
      print(colored("Headline:", "cyan") , data.get("data-title"))
      title = data.find("div", class_ = "snippet")
      print(colored("Snippet:", "cyan") , title.get("title"))
      print(colored("Source:", "magenta") , data.get("url"))

      if counter == article_limit or counter == 11:
         print("\n=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=-=-=-=-=", colored("END", "yellow"), "\n")